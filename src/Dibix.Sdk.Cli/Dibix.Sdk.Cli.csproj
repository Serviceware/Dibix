<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;net48</TargetFrameworks>
    <OutputType>Exe</OutputType>
    <EnableUnsafeBinaryFormatterSerialization>True</EnableUnsafeBinaryFormatterSerialization>

    <!--
      We could set IsTool to make the application end up in the tools folder.
      However, we want to rename the tool from Dibix.Sdk.Cli to Dibix.
    -->
    <!--<IsTool>true</IsTool>-->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);CollectPackageOutputs</TargetsForTfmSpecificContentInPackage>

    <!-- Do not collect framework dependencies in nuspec file -->
    <SuppressDependenciesWhenPacking>True</SuppressDependenciesWhenPacking>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\Dibix.Sdk\targets\build\Dibix.Sdk.*" Link="build\%(Filename)%(Extension)" Pack="true" PackagePath="build" />
    <None Include="..\Dibix.Sdk\targets\Sdk\*" Link="Sdk\%(Filename)%(Extension)" Pack="true" PackagePath="Sdk" />
    <None Include="..\Dibix.Sdk\Schema\*.json" Link="content\%(Filename)%(Extension)" Pack="true" PackagePath="content" />
    <None Include="..\Dibix.Sdk.CodeGeneration\Schema\*.json" Link="content\%(Filename)%(Extension)" Pack="true" PackagePath="content" />
    <Compile Include="..\..\shared\Diagnostics\Guard.cs" Link="Diagnostics\%(Filename)%(Extension)" />
    <Compile Include="..\..\shared\Extensions\ReflectionExtensions.cs" Link="Extensions\%(Filename)%(Extension)" />
  </ItemGroup>

  <ItemDefinitionGroup>
    <PackageReference PrivateAssets="All" />
    <ProjectReference PrivateAssets="All" />
    <Reference PrivateAssets="All" />
  </ItemDefinitionGroup>

  <ItemGroup>
    <ProjectReference Include="..\Dibix\Dibix.csproj" />
    <ProjectReference Include="..\Dibix.Http.Server\Dibix.Http.Server.csproj" />
    <ProjectReference Include="..\Dibix.Sdk\Dibix.Sdk.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="ILRepack" />
  </ItemGroup>

  <Import Project="$(MSBuildProjectName).targets" />

</Project>