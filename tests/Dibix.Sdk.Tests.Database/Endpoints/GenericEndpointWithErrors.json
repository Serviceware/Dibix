{
  "$schema": "../../../src/Dibix.Sdk/CodeGeneration/Schema/dibix.endpoints.schema.json",
  "GenericEndpoint": [
    {
      "method": "GET",
      "target": "EmptyWithParamsAndComplexUdt",
      "childRoute": "{wtf}",
      "params": {
        "a": "WTF.Is.This",
        "b": "ENV.MachinePassword",
        "c": "CLAIM.None",
        "ids": "QUERY.ids",
        "d": {
          "type": "string"
        },
        "e": "QUERY.wtf",
        "unknown": 0,
        "primitive": "QUERY.primitive",
        "nested": "QUERY.nested",
        "primitivenested": "QUERY.nested"
      },
      "securitySchemes": "FreeToUse",
      "authorization": "none"
    },
    {
      "method": "GET",
      "target": "FileResult",
      "childRoute": "File/{id}",
      "securitySchemes": [
        "Anonymous",
        "Bearer"
      ],
      "fileResponse": {
        "mediaType": "image/*",
        "indentJson": true
      },
      "authorization": "none"
    },
    {
      "method": "GET",
      "target": "Dibix.Sdk.Tests.CodeGeneration.CodeGenerationTaskTests.ReflectionTarget,Dibix.Sdk.Tests",
      "childRoute": "Reflection/{id}",
      "params": {
        "source": {
          "convertFromBody": "X"
        }
      },
      "fileResponse": {
        "mediaType": "application/json",
        "indentJson": true
      }
    },
    {
      "method": "POST",
      "target": "EmptyWithParamsAndComplexUdt",
      "operationId": "PostEmptyWithParamsAndComplexUdt",
      "body": "Request",
      "childRoute": "this/get/is/wrong",
      "params": {
        "a": "BODY.X",
        "b": "BODY.Id.Nm",
        "ids": {
          "source": "BODY.Ids",
          "items": {
            "id": "ITEM.Id",
            "name": "ITEM.Nm"
          }
        },
        "nested": {
          "source": "BODY.Ids",
          "items": {
            "id1": "ITEM.Id",
            "id2": "ITEM.Id"
          }
        },
        "primitivenested": {
          "source": "BODY.Ids",
          "items": {
            "id1": "ITEM.Id",
            "id2": "ITEM.Id"
          }
        }
      },
      "authorization": "none"
    },
    {
      "method": "GET",
      "target": "EmptyWithParams",
      "childRoute": "ambiguous/route/{a}/{c}/{password}",
      "params": {
        "b": "QUERY.b",
        "ids": "QUERY.ids"
      },
      "authorization": "none"
    },
    {
      "method": "POST",
      "target": "EmptyWithParams",
      "operationId": "PostEmptyWithParams",
      "childRoute": "ambiguous/route/{b}/{c}/{password}",
      "params": {
        "a": "QUERY.a",
        "ids": "QUERY.ids"
      },
      "authorization": "none"
    },
    {
      "method": "GET",
      "target": "EmptyWithParamsAndComplexUdt",
      "childRoute": "ambiguous/route/{a}/{c}/{password}",
      "params": {
        "b": "QUERY.b",
        "ids": "QUERY.ids",
        "nested": "QUERY.ids",
        "primitivenested": "QUERY.ids"
      },
      "authorization": "none"
    },
    {
      "method": "GET",
      "target": "EmptyWithParams",
      "operationId": "EmptyWithParamsValidChildRoute",
      "childRoute": "this/first/route/is/ok",
      "params": {
        "a": "QUERY.a",
        "b": "QUERY.b",
        "c": "QUERY.c",
        "password": null,
        "ids": "QUERY.ids"
      },
      "authorization": "none"
    },
    {
      "method": "GET",
      "target": "EmptyWithParams",
      "operationId": "EmptyWithParamsSecondValidChildRoute",
      "childRoute": "this/second/route/is/ok",
      "params": {
        "a": "QUERY.a",
        "b": "QUERY.b",
        "c": null,
        "password": null,
        "ids": "QUERY.ids"
      },
      "authorization": "none"
    },
    {
      "method": "DELETE",
      "target": "EmptyWithParams",
      "operationId": "DeleteEmptyWithParams",
      "body": "InputContract",
      "authorization": "none"
    }
  ]
}