.Lambda #Lambda1<Dibix.Http.Server.HttpParameterResolver+ResolveParameters>(
    Dibix.Http.Server.IHttpRequestDescriptor $request,
    System.Collections.Generic.IDictionary`2[System.String,System.Object] $arguments,
    Dibix.Http.Server.IParameterDependencyResolver $dependencyResolver,
    Dibix.Http.Server.IHttpActionDescriptor $action) {
    .Block(Dibix.IDatabaseAccessorFactory $databaseaccessorfactorySource) {
        $databaseaccessorfactorySource = .Call $dependencyResolver.Resolve();
        $arguments.Item["databaseAccessorFactory"] = (System.Object)$databaseaccessorfactorySource;
        $arguments.Item["audiences"] = (System.Object).Block(
            Dibix.Http.Server.Tests.HttpParameterResolverTest+StringSet $audiences,
            System.Collections.Generic.IEnumerator`1[System.String] $audiencesEnumerator) {
            $audiences = .New Dibix.Http.Server.Tests.HttpParameterResolverTest+StringSet();
            .Try {
                .Block() {
                    $audiencesEnumerator = .Call (.Call Dibix.Http.Server.ClaimParameterSourceProvider.GetMultipleClaimValue(
                        $request,
                        "Audiences")).GetEnumerator();
                    .Loop  {
                        .If (
                            .IsTrue(.Call $audiencesEnumerator.MoveNext())
                        ) {
                            .Block(System.String $audiencesElement) {
                                $audiencesElement = $audiencesEnumerator.Current;
                                .Call $audiences.Add($audiencesElement)
                            }
                        } .Else {
                            .Break BreakAudiencesEnumerator { }
                        }
                    }
                    .LabelTarget BreakAudiencesEnumerator:
                }
            } .Finally {
                .If ($audiencesEnumerator != null) {
                    .Call $audiencesEnumerator.Dispose()
                } .Else {
                    .Default(System.Void)
                }
            };
            $audiences
        }
    }
}