.Lambda #Lambda1<Dibix.Http.Server.HttpParameterResolver+ResolveParameters>(
    Dibix.Http.Server.IHttpRequestDescriptor $request,
    System.Collections.Generic.IDictionary`2[System.String,System.Object] $arguments,
    Dibix.Http.Server.IParameterDependencyResolver $dependencyResolver,
    Dibix.Http.Server.IHttpActionDescriptor $action) {
    .Block(
        Dibix.IDatabaseAccessorFactory $databaseaccessorfactorySource,
        Dibix.Http.Server.Tests.HttpParameterResolverTest+ImplicitHttpBody $bodySource,
        Dibix.Http.Server.Tests.HttpParameterResolverTest+ImplicitBodyHttpParameterInput $input) {
        $databaseaccessorfactorySource = .Call $dependencyResolver.Resolve();
        $bodySource = .Call Dibix.Http.Server.HttpParameterResolverUtility.ReadBody($arguments);
        $arguments.Item["databaseAccessorFactory"] = (System.Object)$databaseaccessorfactorySource;
        $arguments.Item["userid"] = (System.Object)$bodySource.UserId;
        $arguments.Item["itemsa"] = (System.Object).Call Dibix.StructuredType`1[Dibix.Http.Server.Tests.HttpParameterResolverTest+ImplicitHttpBodyItemSet].From(
            $bodySource.ItemsA,
            .Lambda #Lambda2<System.Action`2[Dibix.Http.Server.Tests.HttpParameterResolverTest+ImplicitHttpBodyItemSet,Dibix.Http.Server.Tests.HttpParameterResolverTest+ImplicitHttpBodyItem]>)
        ;
        $arguments.Item["itemsb"] = (System.Object).Call Dibix.StructuredType`1[Dibix.Http.Server.Tests.HttpParameterResolverTest+StringSet].From(
            $bodySource.ItemsB,
            .Lambda #Lambda3<System.Action`2[Dibix.Http.Server.Tests.HttpParameterResolverTest+StringSet,System.String]>);
        $input = .New Dibix.Http.Server.Tests.HttpParameterResolverTest+ImplicitBodyHttpParameterInput();
        $input.sourceid = .Call Dibix.Http.Server.HttpParameterResolver.ConvertValue(
            "sourceid",
            $bodySource.SourceId,
            $action);
        $input.localeid = $bodySource.LocaleId;
        $input.fromuri = .Call Dibix.Http.Server.HttpParameterResolver.ConvertValue(
            "fromuri",
            .Call Dibix.Http.Server.HttpParameterResolverUtility.ReadArgument(
                $arguments,
                "fromuri"),
            $action);
        $arguments.Item["input"] = (System.Object)$input
    }
}

.Lambda #Lambda2<System.Action`2[Dibix.Http.Server.Tests.HttpParameterResolverTest+ImplicitHttpBodyItemSet,Dibix.Http.Server.Tests.HttpParameterResolverTest+ImplicitHttpBodyItem]>(
    Dibix.Http.Server.Tests.HttpParameterResolverTest+ImplicitHttpBodyItemSet $x,
    Dibix.Http.Server.Tests.HttpParameterResolverTest+ImplicitHttpBodyItem $y) {
    .Call $x.Add(
        .Call Dibix.Http.Server.HttpParameterResolver.ConvertValue(
            "type",
            $y.Type,
            $action),
        $y.Name)
}

.Lambda #Lambda3<System.Action`2[Dibix.Http.Server.Tests.HttpParameterResolverTest+StringSet,System.String]>(
    Dibix.Http.Server.Tests.HttpParameterResolverTest+StringSet $x,
    System.String $y) {
    .Call $x.Add($y)
}