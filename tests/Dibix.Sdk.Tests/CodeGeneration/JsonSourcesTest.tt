<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="$(SolutionDir)\src\Dibix.Sdk\bin\Debug\net46\Dibix.Sdk.dll" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="Dibix.Sdk.CodeGeneration" #>
<#@ import namespace="Dibix.Sdk.CodeAnalysis.Rules" #><#

// Override naming conventions
Type namingConventionType = typeof(NamingConventionSqlCodeAnalysisRule).Assembly.GetType("Dibix.Sdk.CodeAnalysis.Rules.NamingConvention");
IDictionary<string, string> overrides = new Dictionary<string, string>
{
    { "Table",     "dbx*" }
  , { "Procedure", "dbx*" }
};
foreach (KeyValuePair<string, string> @override in overrides)
    namingConventionType.GetField(@override.Key, BindingFlags.Public | BindingFlags.Static).SetValue(null, @override.Value);

string output = SqlAccessorGeneratorBuilder.GenerateFromJsonInVisualStudio(this.Host, (IServiceProvider)this.Host, @"{
    ""input"": {
        ""Dibix.Sdk.Tests.Database1"": null,
        ""Dibix.Sdk.Tests.Database2"": {
            ""include"": [
                ""Tables"",
                ""Stored Procedures"",
                ""Tests/Sources/Excluded/Nested/dbx_tests_sources_excludednested.sql""
            ],
            ""exclude"": [
                ""ignored""
            ]
        },
        ""Dibix.Sdk.Tests.Database3"": {
            ""include"": ""Tables"",
            ""exclude"": ""ignored"",
            ""parser"": ""SqlStoredProcedureParser"",
            ""formatter"": ""TakeSourceSqlStatementFormatter""
        },
        ""Dibix.Sdk.Tests.Database4"": {
            ""exclude"": ""ignored"",
            ""parser"": ""NoOpParser"",
            ""formatter"": ""GenerateScriptSqlStatementFormatter""
        },
        ""../SSISDB.dacpac"": {
            ""include"": {
                ""[catalog].[delete_project]"": ""DeleteProject""
            },
            ""parser"": ""SqlStoredProcedureParser"",
            ""formatter"": ""ExecStoredProcedureSqlStatementFormatter""
        }
    },
    ""output"": ""SqlDaoWriter"",
    ""output"": {
        ""name"": ""SqlDaoWriter"",
        ""namespace"": ""This.Is.A.Custom.Namespace"",
        ""className"": ""Accessor"",
        ""formatting"": ""Verbatim""
    }
}");
Write(output);

#>