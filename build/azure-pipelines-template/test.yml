parameters:
- name: operatingSystem
  type: string
  values:
  - Linux
  - macOS
  - Windows
- name: configuration
  type: string
  values:
  - Debug
  - Release
- name: codeCoverageEngine
  type: string
  values:
  - Native
  - Cobertura

steps:
- task: DotNetCoreCLI@2
  displayName: 📈 Install ReportGenerator
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path $(Agent.TempDirectory) dotnet-reportgenerator-globaltool

- ${{ if eq(parameters.operatingSystem, 'Linux') }}:
  - template: test-dotnet.yml
    parameters:
      projects:
      - Dibix.Dapper.Tests
      - Dibix.Generators.Tests
      - Dibix.Http.Client.Tests
      - Dibix.Http.Server.Tests
      - Dibix.Sdk.Tests
      - Dibix.Tests
      configuration: ${{ parameters.configuration }}
      codeCoverageEngine: Cobertura # Native (*.coverage) is only supported on Windows
- ${{ if eq(parameters.operatingSystem, 'macOS') }}:
  - template: test-dotnet.yml
    parameters:
      projects:
     #  Dibix.Dapper.Tests require Testcontainers.MsSql and the docker image is only available for Linux
     #- Dibix.Dapper.Tests
      - Dibix.Generators.Tests
      - Dibix.Http.Client.Tests
      - Dibix.Http.Server.Tests
      - Dibix.Sdk.Tests
      - Dibix.Tests
      configuration: ${{ parameters.configuration }}
      codeCoverageEngine: Cobertura # Native (*.coverage) is only supported on Windows
- ${{ if eq(parameters.operatingSystem, 'Windows') }}:
  - template: test-dotnet.yml
    parameters:
      projects:
     #  Dibix.Dapper.Tests require Testcontainers.MsSql and the docker image is only available for Linux
     #- Dibix.Dapper.Tests
      - Dibix.Generators.Tests
      - Dibix.Http.Client.Tests
      - Dibix.Http.Server.Tests
      - Dibix.Sdk.Tests
      - Dibix.Tests
      configuration: ${{ parameters.configuration }}
      codeCoverageEngine: ${{ parameters.codeCoverageEngine }}

- script: >
    $(Agent.TempDirectory)/reportgenerator
    -reports:$(Build.ArtifactStagingDirectory)/test/*.xml
    -targetdir:$(Build.ArtifactStagingDirectory)/test/Report
    -reporttypes:HtmlInline_AzurePipelines_Dark
  displayName: 🔗 Merge code coverage results (*.html)

- template: publish-artifact.yml
  parameters:
    artifact: Test output ($(operatingSystem))
    folder: test