pool:
  name: Processes

#trigger:
#- master
#- rel/*

parameters:
- name: PublishPackages
  displayName: "\U0001FA82 Publish packages"
  type: boolean
  default: "false"

variables:
  # Unfortunately 'Build.SourceVersionMessage' is not available at this stage yet - See setvariable step
  PublishPackages: "$[or(eq('${{ parameters.PublishPackages }}', true), contains(variables['Build.SourceVersionMessage'], '[package]'))]"

steps:
#- powershell: (gci  env:* | sort-object name) # Print env variables

- script: "echo ##vso[task.setvariable variable=PublishPackages]true"
  displayName: "\U0001F50D Resolve 'PublishPackages' property from commmit message"
  condition: contains(variables['Build.SourceVersionMessage'], '[package]')

- task: DotNetCoreCLI@2  
  displayName: "\U0001F913 Install NBGV"
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv

- script: nbgv cloud
  displayName: "\U0001F58D Update pipeline instance name"

- task: DotNetCoreCLI@2
  displayName: "\U0001F52C Build debug"
  inputs:
    command: 'build'
    arguments: '/p:SonarQubeExclude=True'

- task: DotNetCoreCLI@2
  displayName: "\U0001F6A2 Build release"
  inputs:
    command: 'build'
    arguments: '-c Release /p:SonarQubeExclude=True'

- task: DotNetCoreCLI@2
  displayName: "\U0001F4E6 Create packages"
  inputs:
    command: 'pack'
    packagesToPack: 'src\Dibix;src\Dibix.Dapper;src\Dibix.Http.Server;src\Dibix.Sdk;src\Dibix.Testing'
    configuration: 'Release'
    verbosityPack: 'Normal'
    arguments: '/p:SonarQubeExclude=True'

- task: DotNetCoreCLI@2
  displayName: "\U0001F9EA Run unit tests"
  continueOnError: true
  inputs:
    command: 'test'
    arguments: '/p:SonarQubeExclude=True'
  env:
    # Required for Dibix.Dapper.Tests
    DefaultConnection:ConnectionString: $(TestConnection:ConnectionString)
    DefaultConnection:ProviderName: System.Data.SqlClient

- task: DotNetCoreCLI@2
  displayName: "\U0001FA82 Publish packages"
  condition: and(succeeded(), eq(variables['PublishPackages'], true)) #, eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '3faf84d3-2d7c-4a03-b5d2-4d12a0b38b6c' # Dibix