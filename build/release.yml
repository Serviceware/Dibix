trigger: none # We only want to trigger manually or based on resources
pr: none

parameters:
- name: publishNuGetPackages
  displayName: Publish NuGet packages
  type: boolean
  default: true
- name: createGitHubRelease
  displayName: Create GitHub release
  type: boolean
  default: true

resources:
  pipelines:
  - pipeline: CI
    source: Dibix
    trigger:
      tags:
      - auto-release

jobs:
- job: Linux
  pool:
    vmImage: ubuntu-latest
  steps:
  # The default behavior is as if checkout: self were the first step, and the current repository is checked out.
  # We don't need sources, therefore, disable it
  - checkout: none
  - powershell: |
      Write-Host "##vso[build.updatebuildnumber]$(resources.pipeline.CI.runName)"
      Write-Host "##vso[task.setvariable variable=IsPreRelease]$('$(resources.pipeline.CI.runName)'.Contains('-'))"
      Write-Host "##vso[task.setvariable variable=IsPreview]$('$(resources.pipeline.CI.runName)'.Contains('+'))"
    displayName: 🖌️ Update pipeline instance name
  - powershell: |
      Write-Host "IsPreRelease = $(IsPreRelease)"
      Write-Host "IsPreview = $(IsPreview)"
    displayName: 📖 Print configuration

  - download: CI
    artifact: NuGet packages
    displayName: 📬 Download 'NuGet packages' artifact

  - task: NuGetCommand@2
    displayName: 🚀 Publish packages
    inputs:
      command: push
      packagesToPush: "$(Pipeline.Workspace)/CI/NuGet packages/*.nupkg"
      nuGetFeedType: external
      publishFeedCredentials: NuGet.org
    condition: and(succeeded(), eq(${{ parameters.publishNuGetPackages }}, true))

  - download: CI
    artifact: Publish output (Linux)
    displayName: 📬 Download 'Publish output (Linux)' artifact

  - download: CI
    artifact: Publish output (Windows)
    displayName: 📬 Download 'Publish output (Windows)' artifact

  - download: CI
    artifact: Publish output (macOS)
    displayName: 📬 Download 'Publish output (macOS)' artifact

  - task: GitHubRelease@1
    displayName: 📝 Create GitHub release
    inputs:
      gitHubConnection: github.com_C0nquistadore
      repositoryName: $(Build.Repository.Name)
      target: $(resources.pipeline.CI.sourceCommit)
      tagSource: userSpecifiedTag
      tag: v$(resources.pipeline.CI.runName)
      title: v$(resources.pipeline.CI.runName)
      isPreRelease: $(IsPreRelease)
      isDraft: $(IsPreview)
      assets: |
        $(Pipeline.Workspace)/CI/NuGet packages/*.nupkg
        $(Pipeline.Workspace)/CI/Publish output*/*.zip
      changeLogCompareToRelease: lastNonDraftRelease
      changeLogType: commitBased
      changeLogLabels: |
        [
          { "label" : "bug", "displayName" : "Fixes", "state" : "closed" },
          { "label" : "enhancement", "displayName": "Enhancements", "state" : "closed" }
        ]
    condition: and(succeeded(), eq(${{ parameters.createGitHubRelease }}, true))